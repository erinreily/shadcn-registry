{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "box-demo",
  "type": "registry:component",
  "title": "Box Demo",
  "description": "A demo for box components",
  "files": [
    {
      "path": "registry/new-york/blocks/box-demo/box-demo.tsx",
      "content": "import { BoxButton } from \"@/registry/new-york/ui/box/box-button/BoxButton\"\nimport { BoxIconButton } from \"@/registry/new-york/ui/box/box-icon-button/BoxIconButton\"\nimport { CloseIcon } from \"@/registry/new-york/ui/box/icons/Close\"\n\nexport default async function Page() {\n  return (\n    <div>\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', alignItems: 'center' }}>\n        <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>Button Variations</h2>\n        <br />\n        <h3>Primary</h3>\n        <BoxButton>Click me</BoxButton>\n        <h3>Secondary</h3>\n        <BoxButton variant=\"secondary\">Click me</BoxButton>\n        <h3>Tertiary</h3>\n        <BoxButton variant=\"tertiary\">Click me</BoxButton>\n        <h3>Small</h3>\n        <BoxButton size=\"small\">Click me</BoxButton>\n        <h3>Large</h3>\n        <BoxButton size=\"large\">Click me</BoxButton>\n      </div>\n\n      <br />\n      <br />\n\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '10px', alignItems: 'center' }}>\n        <h2 style={{ fontSize: '24px', fontWeight: 'bold' }}>Icon Button Variations</h2>\n        <br />\n        <h3>Default</h3>\n        <BoxIconButton variant=\"subtle\"><CloseIcon /></BoxIconButton>\n        <h3>Small</h3>\n        <BoxIconButton size=\"small\"><CloseIcon /></BoxIconButton>\n        <h3>Large</h3>\n        <BoxIconButton size=\"large\"><CloseIcon /></BoxIconButton>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/new-york/ui/box/box-button/BoxButton.tsx",
      "content": "import React from 'react';\nimport './BoxButton.css';\n\nexport interface BoxButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'outline' | 'tertiary';\n  size?: 'small' | 'medium' | 'large';\n  children: React.ReactNode;\n}\n\nexport const BoxButton = React.forwardRef<HTMLButtonElement, BoxButtonProps>(\n  ({ variant = 'primary', size = 'medium', className = '', children, ...props }, ref) => {\n    const classes = [\n      'box-button',\n      `box-button--${variant}`,\n      `box-button--${size}`,\n      className\n    ].filter(Boolean).join(' ');\n\n    return (\n      <button ref={ref} className={classes} {...props}>\n        {children}\n      </button>\n    );\n  }\n);\n\nBoxButton.displayName = 'BoxButton';\n\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/new-york/ui/box/box-button/BoxButton.css",
      "content": "@import '../tokens.css';\n\n.box-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  font-family: var(--body-default-font-family);\n  font-weight: var(--body-default-bold-font-weight);\n  letter-spacing: var(--body-default-letter-spacing);\n  transition: all var(--animation-duration-2) ease;\n  outline: none;\n  position: relative;\n}\n\n.box-button:focus-visible {\n  outline: var(--border-2) solid var(--outline-focus-on-light);\n  outline-offset: var(--space-1);\n}\n\n.box-button:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n/* Primary variant */\n.box-button--primary {\n  background-color: var(--surface-surface-brand);\n  color: var(--text-text-on-dark);\n  border-radius: var(--radius-half);\n}\n\n.box-button--primary:hover:not(:disabled) {\n  background-color: var(--surface-surface-brand-hover);\n}\n\n.box-button--primary:active:not(:disabled) {\n  background-color: var(--surface-surface-brand-pressed);\n}\n\n/* Secondary variant */\n.box-button--secondary {\n  background-color: var(--surface-cta-surface-secondary);\n  color: var(--text-text-on-light);\n  border: var(--border-1) solid var(--border-cta-border-secondary);\n  border-radius: var(--radius-half);\n}\n\n.box-button--secondary:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-secondary-hover);\n  border-color: var(--border-cta-border-secondary-hover);\n}\n\n.box-button--secondary:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-secondary-pressed);\n  border-color: var(--border-cta-border-secondary-pressed);\n}\n\n/* Outline variant */\n.box-button--outline {\n  background-color: var(--surface-cta-surface-outline);\n  color: var(--text-text-on-light);\n  border: var(--border-1) solid var(--border-cta-border-outline);\n  border-radius: var(--radius-half);\n}\n\n.box-button--outline:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-outline-hover);\n  border-color: var(--border-cta-border-outline-hover);\n}\n\n.box-button--outline:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-outline-pressed);\n  border-color: var(--border-cta-border-outline-pressed);\n}\n\n/* Tertiary variant */\n.box-button--tertiary {\n  background-color: var(--surface-cta-surface-tertiary);\n  color: var(--text-text-on-light);\n  border-radius: var(--radius-half);\n}\n\n.box-button--tertiary:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-tertiary-hover);\n}\n\n.box-button--tertiary:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-tertiary-pressed);\n}\n\n/* Size variants */\n.box-button--small {\n  padding: var(--space-2) var(--space-4);\n  font-size: var(--caption-default-font-size);\n  line-height: var(--caption-default-line-height);\n  min-height: var(--size-8);\n}\n\n.box-button--medium {\n  padding: var(--space-3) var(--space-6);\n  font-size: var(--body-default-font-size);\n  line-height: var(--body-default-line-height);\n  min-height: var(--size-10);\n}\n\n.box-button--large {\n  padding: var(--space-4) var(--space-8);\n  font-size: var(--body-large-font-size);\n  line-height: var(--body-large-line-height);\n  min-height: var(--size-12);\n}\n\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/new-york/ui/box/box-icon-button/BoxIconButton.tsx",
      "content": "import React from 'react';\nimport './BoxIconButton.css';\n\nexport interface BoxIconButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The icon to display inside the button\n   */\n  children: React.ReactNode;\n  /**\n   * Size variant of the icon button\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Visual variant of the icon button\n   */\n  variant?: 'default' | 'subtle' | 'ghost';\n}\n\nexport const BoxIconButton = React.forwardRef<HTMLButtonElement, BoxIconButtonProps>(\n  ({ children, size = 'medium', variant = 'default', className = '', ...props }, ref) => {\n    const classes = [\n      'box-icon-button',\n      `box-icon-button--${variant}`,\n      `box-icon-button--${size}`,\n      className\n    ].filter(Boolean).join(' ');\n\n    return (\n      <button ref={ref} className={classes} type=\"button\" {...props}>\n        {children}\n      </button>\n    );\n  }\n);\n\nBoxIconButton.displayName = 'BoxIconButton';\n\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/new-york/ui/box/box-icon-button/BoxIconButton.css",
      "content": "@import '../tokens.css';\n\n.box-icon-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  font-family: var(--body-default-font-family);\n  transition: all var(--animation-duration-2) ease;\n  outline: none;\n  position: relative;\n  background-color: var(--surface-surface-secondary);\n  color: var(--text-text-on-light);\n  border-radius: var(--radius-3);\n  flex-shrink: 0;\n}\n\n/* Focus state with blue border */\n.box-icon-button:focus-visible {\n  outline: var(--border-2) solid var(--outline-focus-on-light);\n  outline-offset: 0;\n  box-shadow: 0 0 0 var(--border-2) var(--outline-focus-on-light);\n}\n\n/* Pressed state */\n.box-icon-button:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-pressed);\n  transform: scale(0.98);\n}\n\n/* Hover state */\n.box-icon-button:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-hover);\n}\n\n/* Disabled state */\n.box-icon-button:disabled {\n  cursor: not-allowed;\n  opacity: 0.4;\n  background-color: var(--surface-surface-secondary);\n  color: var(--text-text-on-light);\n}\n\n/* Default variant */\n.box-icon-button--default {\n  background-color: var(--surface-surface-secondary);\n}\n\n.box-icon-button--default:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-hover);\n}\n\n.box-icon-button--default:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-pressed);\n}\n\n/* Subtle variant */\n.box-icon-button--subtle {\n  background-color: var(--surface-cta-surface-icon);\n}\n\n.box-icon-button--subtle:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-hover);\n}\n\n.box-icon-button--subtle:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-pressed);\n}\n\n/* Ghost variant */\n.box-icon-button--ghost {\n  background-color: transparent;\n}\n\n.box-icon-button--ghost:hover:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-hover);\n}\n\n.box-icon-button--ghost:active:not(:disabled) {\n  background-color: var(--surface-cta-surface-icon-pressed);\n}\n\n/* Size variants */\n.box-icon-button--small {\n  width: var(--size-8);\n  height: var(--size-8);\n  font-size: var(--size-3);\n  padding: var(--space-2);\n}\n\n.box-icon-button--small svg {\n  width: var(--size-3);\n  height: var(--size-3);\n}\n\n.box-icon-button--medium {\n  width: var(--size-10);\n  height: var(--size-10);\n  font-size: var(--size-4);\n  padding: var(--space-3);\n}\n\n.box-icon-button--medium svg {\n  width: var(--size-4);\n  height: var(--size-4);\n}\n\n.box-icon-button--large {\n  width: var(--size-12);\n  height: var(--size-12);\n  font-size: var(--size-5);\n  padding: var(--space-4);\n}\n\n.box-icon-button--large svg {\n  width: var(--size-5);\n  height: var(--size-5);\n}\n\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/new-york/ui/box/icons/close.tsx",
      "content": "import React from 'react';\n\nexport interface CloseIconProps extends React.SVGProps<SVGSVGElement> {\n  size?: number;\n}\n\nexport const CloseIcon = React.forwardRef<SVGSVGElement, CloseIconProps>(\n  ({ size = 16, className = '', ...props }, ref) => {\n    return (\n      <svg\n        ref={ref}\n        width={size}\n        height={size}\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className={className}\n        {...props}\n      >\n        <path\n          d=\"M12.5 3.5L3.5 12.5M3.5 3.5L12.5 12.5\"\n          stroke=\"currentColor\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    );\n  }\n);\n\nCloseIcon.displayName = 'CloseIcon';\n\n",
      "type": "registry:ui"
    },
    {
      "path": "registry/new-york/ui/box/tokens.css",
      "content": ":root {\n  /* Surface tokens */\n  --surface-surface-secondary: #fbfbfb;\n  --surface-surface-brand: #0061d5;\n  --surface-surface-brand-hover: #006ae9;\n  --surface-surface-brand-pressed: #004eac;\n  --surface-cta-surface-secondary: #ffffff;\n  --surface-cta-surface-secondary-hover: #f4f4f4;\n  --surface-cta-surface-secondary-pressed: #e8e8e8;\n  --surface-cta-surface-outline: rgba(0, 0, 0, 0);\n  --surface-cta-surface-outline-hover: rgba(0, 0, 0, 0.04);\n  --surface-cta-surface-outline-pressed: rgba(0, 0, 0, 0.08);\n  --surface-cta-surface-icon: rgba(0, 0, 0, 0);\n  --surface-cta-surface-icon-hover: rgba(0, 0, 0, 0.04);\n  --surface-cta-surface-icon-pressed: rgba(0, 0, 0, 0.08);\n  --surface-cta-surface-tertiary: #ffffff;\n  --surface-cta-surface-tertiary-hover: #f4f4f4;\n  --surface-cta-surface-tertiary-pressed: #e8e8e8;\n\n  /* Border tokens */\n  --border-cta-border-secondary: #bcbcbc;\n  --border-cta-border-secondary-pressed: #bcbcbc;\n  --border-cta-border-secondary-hover: #bcbcbc;\n  --border-cta-border-outline: #000000;\n  --border-cta-border-outline-hover: #000000;\n  --border-cta-border-outline-pressed: #000000;\n  --border-1: 0.0625rem;\n  --border-2: 0.125rem;\n\n  /* Text tokens */\n  --text-text-on-light: #222222;\n  --text-text-on-dark: #ffffff;\n\n  /* Outline tokens */\n  --outline-focus-on-light: #2486fc;\n\n  /* Typography tokens */\n  --body-large-font-family: Lato, -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;\n  --body-large-font-weight: 400;\n  --body-large-line-height: 1.5rem;\n  --body-large-font-size: 1rem;\n  --body-large-letter-spacing: 0.01875rem;\n\n  --body-default-bold-font-weight: 700;\n  --body-default-font-family: Lato, -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;\n  --body-default-font-weight: 400;\n  --body-default-line-height: 1.25rem;\n  --body-default-font-size: 0.875rem;\n  --body-default-letter-spacing: 0.01875rem;\n\n  --caption-default-font-family: Lato, -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;\n  --caption-default-font-weight: 400;\n  --caption-default-line-height: 0.875rem;\n  --caption-default-font-size: 0.75rem;\n  --caption-default-letter-spacing: 0.01875rem;\n\n  /* Radius tokens */\n  --radius-3: 0.5rem;\n  --radius-half: 2rem;\n\n  /* Space tokens */\n  --space-1: 0.25rem;\n  --space-2: 0.5rem;\n  --space-3: 0.75rem;\n  --space-4: 1rem;\n  --space-6: 1.5rem;\n  --space-8: 2rem;\n\n  /* Size tokens */\n  --size-3: 0.75rem;\n  --size-4: 1rem;\n  --size-5: 1.25rem;\n  --size-8: 2rem;\n  --size-10: 2.5rem;\n  --size-12: 3rem;\n\n  /* Animation tokens */\n  --animation-duration-2: 200ms;\n}\n\n",
      "type": "registry:ui"
    }
  ]
}